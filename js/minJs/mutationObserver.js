"use strict";function _createForOfIteratorHelper(r){if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(r=_unsupportedIterableToArray(r))){var e=0,t=function(){};return{s:t,n:function(){return e>=r.length?{done:!0}:{done:!1,value:r[e++]}},e:function(r){throw r},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var n,o,a=!0,i=!1;return{s:function(){n=r[Symbol.iterator]()},n:function(){var r=n.next();return a=r.done,r},e:function(r){i=!0,o=r},f:function(){try{a||null==n.return||n.return()}finally{if(i)throw o}}}}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=r[t];return n}console.log("MutationObserver is working sound!!!");var targetNode=document.querySelector(".contentSpot"),config={attributes:!0,childList:!0,subtree:!0},callback=function(r){var e,t=_createForOfIteratorHelper(r);try{for(t.s();!(e=t.n()).done;){var n=e.value;console.trace(n),"childList"===n.type?(console.log("A child node has been added or removed."),console.log(n.type)):"attributes"===n.type?console.log("The "+n.attributeName+" attribute was modified."):console.log("Anything happened")}}catch(r){t.e(r)}finally{t.f()}},observer=new MutationObserver(callback);